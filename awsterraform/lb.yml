Description: Stack for creating loadbalancer

Resources:
  # Load Balancer
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: cloudshirt-alb
      Subnets:
        - !ImportValue AZStack:PublicSubnet1
        - !ImportValue AZStack:PublicSubnet2
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Type: application
      IpAddressType: ipv4

  # Target Group
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: cloudshirt-target-group
      Port: 80
      Protocol: HTTP
      VpcId: !ImportValue AZStack:VPC
      TargetType: instance

  # Listener for ALB
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  # Security Group for the Load Balancer
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for the ALB"
      VpcId: !ImportValue AZStack:VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'

Outputs:
  LoadBalancerDNS:
    Description: "DNS Name of the Load Balancer"
    Value: !GetAtt ALB.DNSName
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", "LoadBalancerDNS" ] ]

  TargetGroup:
    Description: Reference to the Target Group
    Value: !Ref TargetGroup
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", TargetGroup ] ]